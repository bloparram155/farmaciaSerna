/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mx.itson.farmacia.Presentacion;

import javax.swing.table.DefaultTableModel;
import mx.itson.farmacia.Entidades.DerechoHabiente;
import mx.itson.farmacia.Entidades.Laboratorio;
import mx.itson.farmacia.Entidades.Producto;
import mx.itson.farmacia.Entidades.Salida;
import mx.itson.farmacia.Implementacion.ISalida;
import mx.itson.farmacia.Interfaz.SalidaInterfaz;

/**
 *
 * @author Laprada
 */
public class VerSalidas extends javax.swing.JInternalFrame {

    /**
     * Creates new form VerSalidas
     */
    public VerSalidas() {
        initComponents();
    }

    SalidaInterfaz sii = new ISalida();
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblMostrarSalidas = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblProductosSalida = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();

        setClosable(true);
        setTitle("Salidas");

        tblMostrarSalidas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Doctor", "DerechoHabiente", "Usuario", "Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblMostrarSalidas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblMostrarSalidasMouseClicked(evt);
            }
        });
        tblMostrarSalidas.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                tblMostrarSalidasAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jScrollPane1.setViewportView(tblMostrarSalidas);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel1.setText("Registro de Salidas");

        jButton1.setText("Buscar");

        tblProductosSalida.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Nombre", "Descripción", "Cantidad", "Precio Unitario", "Laboratorio"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblProductosSalida);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel2.setText("Listado de productos por salida");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel2)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 820, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addContainerGap(115, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**}
     * Método para rellenar la tabla con el registro de Salidas de la bd.
     */
    private void llenarTabla(){
         
         DefaultTableModel dtm =  new DefaultTableModel();
         tblMostrarSalidas.setModel(dtm);
        
        dtm.addColumn("Id");
        dtm.addColumn("Doctor");
        dtm.addColumn("Derecho Habiente");
        dtm.addColumn("Usuario");
        
       
        
        for(Salida sal: sii.mostrarSalidas()){
            
            Object[] fila = new Object[5];
            fila[0] = sal.getId();
            fila[1] = sal.getDoctor().getNombre()+" "+ sal.getDoctor().getApellido();
            fila[2] = sal.getDerechoHabiente().getNombre();
            fila[3] = sal.getUsuario().getNombre();
    
            dtm.addRow(fila);
         
        }
    }
    
    /**
     * Método para rellenar la tabla de productos de salida individual.
     * @param s 
     */
     private void llenarTablaProductoSalida(Salida s){
         
         DefaultTableModel dtm =  new DefaultTableModel();
         tblProductosSalida.setModel(dtm);
        
        dtm.addColumn("Id");
        dtm.addColumn("Nombre");
        dtm.addColumn("Descripcion");
        dtm.addColumn("Cantidad");
        dtm.addColumn("Precio Unitario");
        dtm.addColumn("Laboratorio");
        
       
        
        for(Producto sal: s.getLista()){
            
            Object[] fila = new Object[7];
            fila[0] = sal.getId();
            fila[1] = sal.getNombre();
            fila[2] = sal.getDescripcion();
            fila[3] = sal.getCantidad();
            fila[4] = sal.getPrecioUnitario();
            fila[5] = sal.getLaboratorio();
    
            dtm.addRow(fila);
         
        }
    }
    private DefaultTableModel llenarTablaSalida(){
         
         DefaultTableModel dtm =  new DefaultTableModel();
         tblMostrarSalidas.setModel(dtm);
        
        dtm.addColumn("Id");
        dtm.addColumn("Doctor");
        dtm.addColumn("Derecho Habiente");
        dtm.addColumn("Usuario");
        
       
        
        for(Salida sal: sii.mostrarSalidas()){
            
            Object[] fila = new Object[5];
            fila[0] = sal.getId();
            fila[1] = sal.getDoctor().getNombre() + " " +sal.getDoctor().getApellido();
            fila[2] = sal.getDerechoHabiente().getNombre();
            fila[3] = sal.getUsuario().getNombre();
    
            dtm.addRow(fila);
         
        }
        return dtm;
    }
    
    
    private void tblMostrarSalidasAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_tblMostrarSalidasAncestorAdded
       llenarTabla();
    }//GEN-LAST:event_tblMostrarSalidasAncestorAdded

    private void tblMostrarSalidasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblMostrarSalidasMouseClicked
        int index = tblMostrarSalidas.getSelectedRow();
        int id = Integer.parseInt(llenarTablaSalida().getValueAt(index, 0).toString());
        llenarTablaProductoSalida(sii.obtenerLaboratorio(id));
        
    }//GEN-LAST:event_tblMostrarSalidasMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTable tblMostrarSalidas;
    private javax.swing.JTable tblProductosSalida;
    // End of variables declaration//GEN-END:variables
}
