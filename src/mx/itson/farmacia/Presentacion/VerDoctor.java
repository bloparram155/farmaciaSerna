/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mx.itson.farmacia.Presentacion;

import javax.swing.table.DefaultTableModel;
import mx.itson.farmacia.Entidades.DerechoHabiente;
import mx.itson.farmacia.Entidades.Doctor;
import mx.itson.farmacia.Entidades.Laboratorio;
import mx.itson.farmacia.Implementacion.IDoctor;
import mx.itson.farmacia.Interfaz.DoctorInterfaz;

/**
 *
 * @author Laprada
 */
public class VerDoctor extends javax.swing.JInternalFrame {

    /**
     * Creates new form VerDoctor
     */
    public VerDoctor() {
        initComponents();
    }

    DoctorInterfaz di = new IDoctor();
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblMostrarDoctoresRegistrados = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        txtBusquedaDr = new javax.swing.JTextField();
        btnBusquedaDR = new javax.swing.JButton();
        btnMostrarDatos = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblPacientesRegistrados = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();

        setClosable(true);

        tblMostrarDoctoresRegistrados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Apellido", "Domicilio", "Ciudad", "Telefono", "Edad", "Especialidad", "Horario"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblMostrarDoctoresRegistrados.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblMostrarDoctoresRegistradosMouseClicked(evt);
            }
        });
        tblMostrarDoctoresRegistrados.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                tblMostrarDoctoresRegistradosAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        tblMostrarDoctoresRegistrados.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tblMostrarDoctoresRegistradosKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(tblMostrarDoctoresRegistrados);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel1.setText("Doctores Registrados");

        btnBusquedaDR.setText("Buscar");
        btnBusquedaDR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBusquedaDRActionPerformed(evt);
            }
        });

        btnMostrarDatos.setText("Mostrar Datos Doctores Registrados");
        btnMostrarDatos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMostrarDatosActionPerformed(evt);
            }
        });

        tblPacientesRegistrados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Apellido", "Domicilio", "Ciudad"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblPacientesRegistrados);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel2.setText("Listado de pacientes");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 737, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(btnBusquedaDR)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(txtBusquedaDr, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(246, 246, 246)
                            .addComponent(btnMostrarDatos))
                        .addComponent(jScrollPane2))
                    .addComponent(jLabel2))
                .addContainerGap(456, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtBusquedaDr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBusquedaDR)
                    .addComponent(btnMostrarDatos))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57)
                .addComponent(jLabel2)
                .addGap(28, 28, 28)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(58, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * MÃ©todo para llenar tabla con doctores registrados
     * @param evt 
     */
     private void llenarTabla(){
         
         DefaultTableModel dtm =  new DefaultTableModel();
         tblMostrarDoctoresRegistrados.setModel(dtm);
        
        dtm.addColumn("Nombre");
        dtm.addColumn("Apellido");
        dtm.addColumn("Domicilio");
        dtm.addColumn("Ciudad");
        dtm.addColumn("Telefono");
        dtm.addColumn("Edad");
        dtm.addColumn("Especialidad");
        dtm.addColumn("Horario");
       
        
        for(Doctor dr: di.mostrarDoctores()){
            
            Object[] fila = new Object[11];
            fila[0] = dr.getNombre();
            fila[1] = dr.getApellido();
            fila[2]= dr.getDomicilio();
            fila[3] = dr.getCiudad();
            fila[4] = dr.getTelefono();
            fila[5] = dr.getEdad();
            fila[6] = dr.getEspecialidad();
            fila[7] = dr.getHorario();
           
            
            dtm.addRow(fila);
         
        }
    }
     
     private void llenarTablaBusqueda(String nombre){
         
         DefaultTableModel dtm =  new DefaultTableModel();
         tblMostrarDoctoresRegistrados.setModel(dtm);
        
       dtm.addColumn("Nombre");
        dtm.addColumn("Apellido");
        dtm.addColumn("Domicilio");
        dtm.addColumn("Ciudad");
        dtm.addColumn("Telefono");
        dtm.addColumn("Edad");
        dtm.addColumn("Especialidad");
        dtm.addColumn("Horario");
       
        
        for(Doctor dr: di.buscarDoctor(nombre)){
            
            Object[] fila = new Object[11];
            fila[0] = dr.getNombre();
            fila[1] = dr.getApellido();
            fila[2]= dr.getDomicilio();
            fila[3] = dr.getCiudad();
            fila[4] = dr.getTelefono();
            fila[5] = dr.getEdad();
            fila[6] = dr.getEspecialidad();
            fila[7] = dr.getHorario();
           
            
            dtm.addRow(fila);
         
        }
    }
    private void tblMostrarDoctoresRegistradosAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_tblMostrarDoctoresRegistradosAncestorAdded
        // TODO add your handling code here:
        
        llenarTabla();
    }//GEN-LAST:event_tblMostrarDoctoresRegistradosAncestorAdded

    private DefaultTableModel llenarTablaDoctor(){
         
         DefaultTableModel dtm =  new DefaultTableModel();
         tblMostrarDoctoresRegistrados.setModel(dtm);
        
        dtm.addColumn("Id");
        dtm.addColumn("Nombre");
        dtm.addColumn("Apellido");
        dtm.addColumn("Domicilio");
        dtm.addColumn("Ciudad");
        dtm.addColumn("Telefono");
        dtm.addColumn("Edad");
        dtm.addColumn("Especialidad");
        dtm.addColumn("Horario");
       
        
        for(Doctor dr: di.mostrarDoctores()){
            
            Object[] fila = new Object[12];
            fila[0] =dr.getId();
            fila[1] = dr.getNombre();
            fila[2] = dr.getApellido();
            fila[3]= dr.getDomicilio();
            fila[4] = dr.getCiudad();
            fila[5] = dr.getTelefono();
            fila[6] = dr.getEdad();
            fila[7] = dr.getEspecialidad();
            fila[8] = dr.getHorario();
           
            
            dtm.addRow(fila);
        }
        return dtm;
    }
    private void btnMostrarDatosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMostrarDatosActionPerformed
        // TODO add your handling code here:
        
        llenarTabla();
    }//GEN-LAST:event_btnMostrarDatosActionPerformed

    private void llenarTablaPacientes(Doctor dr){
        
        DefaultTableModel dtm =  new DefaultTableModel();
        tblPacientesRegistrados.setModel(dtm);
        
        dtm.addColumn("Id");
        dtm.addColumn("Nombre");
        dtm.addColumn("Apellido");
        dtm.addColumn("Domicilio");
        dtm.addColumn("Ciudad");
        dtm.addColumn("AfiliaciÃ³n");
        dtm.addColumn("Dependencia");
    
       
        
        for(DerechoHabiente dha: dr.getLista()){
            
            Object[] fila = new Object[8];
            fila[0] = dha.getId();
            fila[1] = dha.getNombre();
            fila[2] = dha.getApellido();
            fila[3] = dha.getDomicilio();
            fila[4] = dha.getCiudad();
            fila[5] = dha.getAfiliacion();
            fila[6] = dha.getDependencia();
            
            dtm.addRow(fila);
         
        }
    }
    private void btnBusquedaDRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBusquedaDRActionPerformed
        // TODO add your handling code here:
        
        String busqueda = txtBusquedaDr.getText().trim();
        llenarTablaBusqueda(busqueda);
    }//GEN-LAST:event_btnBusquedaDRActionPerformed

    private void tblMostrarDoctoresRegistradosKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblMostrarDoctoresRegistradosKeyPressed
        // TODO add your handling code here:
        
        
        
    }//GEN-LAST:event_tblMostrarDoctoresRegistradosKeyPressed

    private void tblMostrarDoctoresRegistradosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblMostrarDoctoresRegistradosMouseClicked
        // TODO add your handling code here:
        
        int index = tblMostrarDoctoresRegistrados.getSelectedRow();
        int id = Integer.parseInt(llenarTablaDoctor().getValueAt(index, 0).toString());
        llenarTablaPacientes(di.obtenerDoctor(id));
    }//GEN-LAST:event_tblMostrarDoctoresRegistradosMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBusquedaDR;
    private javax.swing.JButton btnMostrarDatos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblMostrarDoctoresRegistrados;
    private javax.swing.JTable tblPacientesRegistrados;
    private javax.swing.JTextField txtBusquedaDr;
    // End of variables declaration//GEN-END:variables
}
